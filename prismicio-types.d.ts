// Code generated by Slice Machine. DO NOT EDIT.

import type * as prismic from "@prismicio/client";

type Simplify<T> = { [KeyType in keyof T]: T[KeyType] };

type PickContentRelationshipFieldData<
  TRelationship extends
    | prismic.CustomTypeModelFetchCustomTypeLevel1
    | prismic.CustomTypeModelFetchCustomTypeLevel2
    | prismic.CustomTypeModelFetchGroupLevel1
    | prismic.CustomTypeModelFetchGroupLevel2,
  TData extends Record<
    string,
    | prismic.AnyRegularField
    | prismic.GroupField
    | prismic.NestedGroupField
    | prismic.SliceZone
  >,
  TLang extends string,
> =
  // Content relationship fields
  {
    [TSubRelationship in Extract<
      TRelationship["fields"][number],
      prismic.CustomTypeModelFetchContentRelationshipLevel1
    > as TSubRelationship["id"]]: ContentRelationshipFieldWithData<
      TSubRelationship["customtypes"],
      TLang
    >;
  } & // Group
  {
    [TGroup in Extract<
      TRelationship["fields"][number],
      | prismic.CustomTypeModelFetchGroupLevel1
      | prismic.CustomTypeModelFetchGroupLevel2
    > as TGroup["id"]]: TData[TGroup["id"]] extends prismic.GroupField<
      infer TGroupData
    >
      ? prismic.GroupField<
          PickContentRelationshipFieldData<TGroup, TGroupData, TLang>
        >
      : never;
  } & // Other fields
  {
    [TFieldKey in Extract<
      TRelationship["fields"][number],
      string
    >]: TFieldKey extends keyof TData ? TData[TFieldKey] : never;
  };

type ContentRelationshipFieldWithData<
  TCustomType extends
    | readonly (prismic.CustomTypeModelFetchCustomTypeLevel1 | string)[]
    | readonly (prismic.CustomTypeModelFetchCustomTypeLevel2 | string)[],
  TLang extends string = string,
> = {
  [ID in Exclude<
    TCustomType[number],
    string
  >["id"]]: prismic.ContentRelationshipField<
    ID,
    TLang,
    PickContentRelationshipFieldData<
      Extract<TCustomType[number], { id: ID }>,
      Extract<prismic.Content.AllDocumentTypes, { type: ID }>["data"],
      TLang
    >
  >;
}[Exclude<TCustomType[number], string>["id"]];

type PageDocumentDataSlicesSlice = PricingSlice;

/**
 * Content for Page documents
 */
interface PageDocumentData {
  /**
   * Slice Zone field in *Page*
   *
   * - **Field Type**: Slice Zone
   * - **Placeholder**: *None*
   * - **API ID Path**: page.slices[]
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/slices
   */
  slices: prismic.SliceZone<PageDocumentDataSlicesSlice> /**
   * Meta Title field in *Page*
   *
   * - **Field Type**: Text
   * - **Placeholder**: A title of the page used for social media and search engines
   * - **API ID Path**: page.meta_title
   * - **Tab**: SEO & Metadata
   * - **Documentation**: https://prismic.io/docs/fields/text
   */;
  meta_title: prismic.KeyTextField;

  /**
   * Meta Description field in *Page*
   *
   * - **Field Type**: Text
   * - **Placeholder**: A brief summary of the page
   * - **API ID Path**: page.meta_description
   * - **Tab**: SEO & Metadata
   * - **Documentation**: https://prismic.io/docs/fields/text
   */
  meta_description: prismic.KeyTextField;

  /**
   * Meta Image field in *Page*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: page.meta_image
   * - **Tab**: SEO & Metadata
   * - **Documentation**: https://prismic.io/docs/fields/image
   */
  meta_image: prismic.ImageField<never>;
}

/**
 * Page document from Prismic
 *
 * - **API ID**: `page`
 * - **Repeatable**: `true`
 * - **Documentation**: https://prismic.io/docs/content-modeling
 *
 * @typeParam Lang - Language API ID of the document.
 */
export type PageDocument<Lang extends string = string> =
  prismic.PrismicDocumentWithUID<Simplify<PageDocumentData>, "page", Lang>;

/**
 * Item in *Pricing Plan → Features*
 */
export interface PricingPlanDocumentDataFeaturesItem {
  /**
   * Feature field in *Pricing Plan → Features*
   *
   * - **Field Type**: Content Relationship
   * - **Placeholder**: *None*
   * - **API ID Path**: pricing_plan.features[].feature
   * - **Documentation**: https://prismic.io/docs/fields/content-relationship
   */
  feature: prismic.ContentRelationshipField<"pricing_plan_feature">;

  /**
   * Description field in *Pricing Plan → Features*
   *
   * - **Field Type**: Text
   * - **Placeholder**: *None*
   * - **API ID Path**: pricing_plan.features[].description
   * - **Documentation**: https://prismic.io/docs/fields/text
   */
  description: prismic.KeyTextField;
}

/**
 * Content for Pricing Plan documents
 */
interface PricingPlanDocumentData {
  /**
   * Title field in *Pricing Plan*
   *
   * - **Field Type**: Text
   * - **Placeholder**: *None*
   * - **API ID Path**: pricing_plan.title
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/fields/text
   */
  title: prismic.KeyTextField;

  /**
   * Price Monthly field in *Pricing Plan*
   *
   * - **Field Type**: Number
   * - **Placeholder**: *None*
   * - **API ID Path**: pricing_plan.price_monthly
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/fields/number
   */
  price_monthly: prismic.NumberField;

  /**
   * Price Yearly field in *Pricing Plan*
   *
   * - **Field Type**: Number
   * - **Placeholder**: *None*
   * - **API ID Path**: pricing_plan.price_yearly
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/fields/number
   */
  price_yearly: prismic.NumberField;

  /**
   * Features field in *Pricing Plan*
   *
   * - **Field Type**: Group
   * - **Placeholder**: *None*
   * - **API ID Path**: pricing_plan.features[]
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/fields/repeatable-group
   */
  features: prismic.GroupField<Simplify<PricingPlanDocumentDataFeaturesItem>>;

  /**
   * Call to action field in *Pricing Plan*
   *
   * - **Field Type**: Link
   * - **Placeholder**: *None*
   * - **API ID Path**: pricing_plan.call_to_action
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/fields/link
   */
  call_to_action: prismic.LinkField<
    string,
    string,
    unknown,
    prismic.FieldState,
    never
  >;

  /**
   * Highlighted field in *Pricing Plan*
   *
   * - **Field Type**: Boolean
   * - **Placeholder**: *None*
   * - **Default Value**: false
   * - **API ID Path**: pricing_plan.highlighted
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/fields/boolean
   */
  highlighted: prismic.BooleanField;
}

/**
 * Pricing Plan document from Prismic
 *
 * - **API ID**: `pricing_plan`
 * - **Repeatable**: `true`
 * - **Documentation**: https://prismic.io/docs/content-modeling
 *
 * @typeParam Lang - Language API ID of the document.
 */
export type PricingPlanDocument<Lang extends string = string> =
  prismic.PrismicDocumentWithUID<
    Simplify<PricingPlanDocumentData>,
    "pricing_plan",
    Lang
  >;

/**
 * Content for Pricing Plan Feature documents
 */
interface PricingPlanFeatureDocumentData {
  /**
   * Title field in *Pricing Plan Feature*
   *
   * - **Field Type**: Text
   * - **Placeholder**: *None*
   * - **API ID Path**: pricing_plan_feature.title
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/fields/text
   */
  title: prismic.KeyTextField;

  /**
   * Description field in *Pricing Plan Feature*
   *
   * - **Field Type**: Text
   * - **Placeholder**: *None*
   * - **API ID Path**: pricing_plan_feature.description
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/fields/text
   */
  description: prismic.KeyTextField;
}

/**
 * Pricing Plan Feature document from Prismic
 *
 * - **API ID**: `pricing_plan_feature`
 * - **Repeatable**: `true`
 * - **Documentation**: https://prismic.io/docs/content-modeling
 *
 * @typeParam Lang - Language API ID of the document.
 */
export type PricingPlanFeatureDocument<Lang extends string = string> =
  prismic.PrismicDocumentWithUID<
    Simplify<PricingPlanFeatureDocumentData>,
    "pricing_plan_feature",
    Lang
  >;

/**
 * Item in *Pricing Plan Group → Features*
 */
export interface PricingPlanGroupDocumentDataFeaturesItem {
  /**
   * Feature field in *Pricing Plan Group → Features*
   *
   * - **Field Type**: Content Relationship
   * - **Placeholder**: *None*
   * - **API ID Path**: pricing_plan_group.features[].feature
   * - **Documentation**: https://prismic.io/docs/fields/content-relationship
   */
  feature: ContentRelationshipFieldWithData<
    [{ id: "pricing_plan_feature"; fields: ["title", "description"] }]
  >;
}

/**
 * Content for Pricing Plan Group documents
 */
interface PricingPlanGroupDocumentData {
  /**
   * Title field in *Pricing Plan Group*
   *
   * - **Field Type**: Text
   * - **Placeholder**: *None*
   * - **API ID Path**: pricing_plan_group.title
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/fields/text
   */
  title: prismic.KeyTextField;

  /**
   * Features field in *Pricing Plan Group*
   *
   * - **Field Type**: Group
   * - **Placeholder**: *None*
   * - **API ID Path**: pricing_plan_group.features[]
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/fields/repeatable-group
   */
  features: prismic.GroupField<
    Simplify<PricingPlanGroupDocumentDataFeaturesItem>
  >;
}

/**
 * Pricing Plan Group document from Prismic
 *
 * - **API ID**: `pricing_plan_group`
 * - **Repeatable**: `true`
 * - **Documentation**: https://prismic.io/docs/content-modeling
 *
 * @typeParam Lang - Language API ID of the document.
 */
export type PricingPlanGroupDocument<Lang extends string = string> =
  prismic.PrismicDocumentWithUID<
    Simplify<PricingPlanGroupDocumentData>,
    "pricing_plan_group",
    Lang
  >;

export type AllDocumentTypes =
  | PageDocument
  | PricingPlanDocument
  | PricingPlanFeatureDocument
  | PricingPlanGroupDocument;

/**
 * Item in *Pricing → Table → Primary → Plans*
 */
export interface PricingSliceTablePrimaryPlansItem {
  /**
   * Plan field in *Pricing → Table → Primary → Plans*
   *
   * - **Field Type**: Content Relationship
   * - **Placeholder**: *None*
   * - **API ID Path**: pricing.table.primary.plans[].plan
   * - **Documentation**: https://prismic.io/docs/fields/content-relationship
   */
  plan: ContentRelationshipFieldWithData<
    [
      {
        id: "pricing_plan";
        fields: [
          {
            id: "features";
            fields: [
              {
                id: "feature";
                customtypes: [
                  {
                    id: "pricing_plan_feature";
                    fields: ["title", "description"];
                  },
                ];
              },
              "description",
            ];
          },
          "title",
          "price_monthly",
          "price_yearly",
          "call_to_action",
          "highlighted",
        ];
      },
    ]
  >;
}

/**
 * Item in *Pricing → Table → Primary → Groups*
 */
export interface PricingSliceTablePrimaryGroupsItem {
  /**
   * Group field in *Pricing → Table → Primary → Groups*
   *
   * - **Field Type**: Content Relationship
   * - **Placeholder**: *None*
   * - **API ID Path**: pricing.table.primary.groups[].group
   * - **Documentation**: https://prismic.io/docs/fields/content-relationship
   */
  group: ContentRelationshipFieldWithData<
    [
      {
        id: "pricing_plan_group";
        fields: [
          "title",
          {
            id: "features";
            fields: [
              {
                id: "feature";
                customtypes: [
                  {
                    id: "pricing_plan_feature";
                    fields: ["title", "description"];
                  },
                ];
              },
            ];
          },
        ];
      },
    ]
  >;
}

/**
 * Item in *Pricing → Cards → Primary → Plans*
 */
export interface PricingSliceCardsPrimaryPlansItem {
  /**
   * Plan field in *Pricing → Cards → Primary → Plans*
   *
   * - **Field Type**: Content Relationship
   * - **Placeholder**: *None*
   * - **API ID Path**: pricing.cards.primary.plans[].plan
   * - **Documentation**: https://prismic.io/docs/fields/content-relationship
   */
  plan: ContentRelationshipFieldWithData<
    [
      {
        id: "pricing_plan";
        fields: [
          "title",
          "price_monthly",
          "price_yearly",
          "call_to_action",
          {
            id: "features";
            fields: [
              "description",
              {
                id: "feature";
                customtypes: [
                  {
                    id: "pricing_plan_feature";
                    fields: ["title", "description"];
                  },
                ];
              },
            ];
          },
          "highlighted",
        ];
      },
    ]
  >;
}

/**
 * Item in *Pricing → Cards → Primary → Features*
 */
export interface PricingSliceCardsPrimaryFeaturesItem {
  /**
   * Feature field in *Pricing → Cards → Primary → Features*
   *
   * - **Field Type**: Content Relationship
   * - **Placeholder**: *None*
   * - **API ID Path**: pricing.cards.primary.features[].feature
   * - **Documentation**: https://prismic.io/docs/fields/content-relationship
   */
  feature: ContentRelationshipFieldWithData<
    [{ id: "pricing_plan_feature"; fields: ["title", "description"] }]
  >;
}

/**
 * Primary content in *Pricing → Table → Primary*
 */
export interface PricingSliceTablePrimary {
  /**
   * Heading field in *Pricing → Table → Primary*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: pricing.table.primary.heading
   * - **Documentation**: https://prismic.io/docs/fields/rich-text
   */
  heading: prismic.RichTextField;

  /**
   * Plans field in *Pricing → Table → Primary*
   *
   * - **Field Type**: Group
   * - **Placeholder**: *None*
   * - **API ID Path**: pricing.table.primary.plans[]
   * - **Documentation**: https://prismic.io/docs/fields/repeatable-group
   */
  plans: prismic.GroupField<Simplify<PricingSliceTablePrimaryPlansItem>>;

  /**
   * Groups field in *Pricing → Table → Primary*
   *
   * - **Field Type**: Group
   * - **Placeholder**: *None*
   * - **API ID Path**: pricing.table.primary.groups[]
   * - **Documentation**: https://prismic.io/docs/fields/repeatable-group
   */
  groups: prismic.GroupField<Simplify<PricingSliceTablePrimaryGroupsItem>>;
}

/**
 * Table variation for Pricing Slice
 *
 * - **API ID**: `table`
 * - **Description**: Table
 * - **Documentation**: https://prismic.io/docs/slices
 */
export type PricingSliceTable = prismic.SharedSliceVariation<
  "table",
  Simplify<PricingSliceTablePrimary>,
  never
>;

/**
 * Primary content in *Pricing → Cards → Primary*
 */
export interface PricingSliceCardsPrimary {
  /**
   * Heading field in *Pricing → Cards → Primary*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: pricing.cards.primary.heading
   * - **Documentation**: https://prismic.io/docs/fields/rich-text
   */
  heading: prismic.RichTextField;

  /**
   * Plans field in *Pricing → Cards → Primary*
   *
   * - **Field Type**: Group
   * - **Placeholder**: *None*
   * - **API ID Path**: pricing.cards.primary.plans[]
   * - **Documentation**: https://prismic.io/docs/fields/repeatable-group
   */
  plans: prismic.GroupField<Simplify<PricingSliceCardsPrimaryPlansItem>>;

  /**
   * Features field in *Pricing → Cards → Primary*
   *
   * - **Field Type**: Group
   * - **Placeholder**: *None*
   * - **API ID Path**: pricing.cards.primary.features[]
   * - **Documentation**: https://prismic.io/docs/fields/repeatable-group
   */
  features: prismic.GroupField<Simplify<PricingSliceCardsPrimaryFeaturesItem>>;
}

/**
 * Cards variation for Pricing Slice
 *
 * - **API ID**: `cards`
 * - **Description**: Table
 * - **Documentation**: https://prismic.io/docs/slices
 */
export type PricingSliceCards = prismic.SharedSliceVariation<
  "cards",
  Simplify<PricingSliceCardsPrimary>,
  never
>;

/**
 * Slice variation for *Pricing*
 */
type PricingSliceVariation = PricingSliceTable | PricingSliceCards;

/**
 * Pricing Shared Slice
 *
 * - **API ID**: `pricing`
 * - **Description**: Pricing
 * - **Documentation**: https://prismic.io/docs/slices
 */
export type PricingSlice = prismic.SharedSlice<
  "pricing",
  PricingSliceVariation
>;

declare module "@prismicio/client" {
  interface CreateClient {
    (
      repositoryNameOrEndpoint: string,
      options?: prismic.ClientConfig,
    ): prismic.Client<AllDocumentTypes>;
  }

  interface CreateWriteClient {
    (
      repositoryNameOrEndpoint: string,
      options: prismic.WriteClientConfig,
    ): prismic.WriteClient<AllDocumentTypes>;
  }

  interface CreateMigration {
    (): prismic.Migration<AllDocumentTypes>;
  }

  namespace Content {
    export type {
      PageDocument,
      PageDocumentData,
      PageDocumentDataSlicesSlice,
      PricingPlanDocument,
      PricingPlanDocumentData,
      PricingPlanDocumentDataFeaturesItem,
      PricingPlanFeatureDocument,
      PricingPlanFeatureDocumentData,
      PricingPlanGroupDocument,
      PricingPlanGroupDocumentData,
      PricingPlanGroupDocumentDataFeaturesItem,
      AllDocumentTypes,
      PricingSlice,
      PricingSliceTablePrimaryPlansItem,
      PricingSliceTablePrimaryGroupsItem,
      PricingSliceTablePrimary,
      PricingSliceCardsPrimaryPlansItem,
      PricingSliceCardsPrimaryFeaturesItem,
      PricingSliceCardsPrimary,
      PricingSliceVariation,
      PricingSliceTable,
      PricingSliceCards,
    };
  }
}
